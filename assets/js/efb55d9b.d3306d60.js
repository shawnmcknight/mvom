"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[17],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?r.createElement(h,o(o({ref:t},s),{},{components:n})):r.createElement(h,o({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3594:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],c={id:"schema_options",title:"Schema Options"},l="Schema Options",p={unversionedId:"Schema/schema_options",id:"Schema/schema_options",title:"Schema Options",description:"Several options can be passed to the schema constructor. As defined in Schema Basics, the syntax of the Schema constructor is:",source:"@site/docs/03 - Schema/03 - Schema Options.md",sourceDirName:"03 - Schema",slug:"/Schema/schema_options",permalink:"/mvom/docs/Schema/schema_options",draft:!1,editUrl:"https://github.com/shawnmcknight/mvom/tree/main/website/docs/03 - Schema/03 - Schema Options.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"schema_options",title:"Schema Options"},sidebar:"docsSidebar",previous:{title:"ISOCalendarDateTime",permalink:"/mvom/docs/Schema/Scalar Schema Types/schema_type_isocalendardatetime"},next:{title:"Scalar Arrays",permalink:"/mvom/docs/Schema/schema_scalar_arrays"}},s={},d=[{value:"Options Object Properties",id:"options-object-properties",level:2},{value:"Dictionaries object",id:"dictionaries-object",level:3},{value:"Validating ID pattern matching",id:"validating-id-pattern-matching",level:3},{value:"Validating ID foreign key",id:"validating-id-foreign-key",level:3},{value:"Encryption",id:"encryption",level:3}],m={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"schema-options"},"Schema Options"),(0,i.kt)("p",null,"Several options can be passed to the schema constructor. As defined in ",(0,i.kt)("a",{parentName:"p",href:"./schema_basics"},"Schema Basics"),", the syntax of the Schema constructor is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"constructor(definition: SchemaDefinition, options?: SchemaConstructorOptions): Schema\n")),(0,i.kt)("p",null,"The second parameter is the options object which contains a number of properties which will affect the behavior of the defined Schema."),(0,i.kt)("h2",{id:"options-object-properties"},"Options Object Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"dictionaries")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"#dictionaries-object"},"object")),(0,i.kt)("td",{parentName:"tr",align:null},"Object defining additional dictionaries not defined in the schema for use in queries")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"idMatch")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"RegExp")),(0,i.kt)("td",{parentName:"tr",align:null},"If specified, the ",(0,i.kt)("inlineCode",{parentName:"td"},"_id")," of the object will be matched against this regular expression")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"idForeignKey")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"#validating-foreign-keys"},"object")),(0,i.kt)("td",{parentName:"tr",align:null},"If specified, value will be validated for foreign key constraints.",(0,i.kt)("br",null)," See link for details on format.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"encrypt")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Function")),(0,i.kt)("td",{parentName:"tr",align:null},"If specified, an encryption function to use with encrypted schema properties")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"decrypt")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Function")),(0,i.kt)("td",{parentName:"tr",align:null},"If specified, a decryption function to use with encrypted schema properties")))),(0,i.kt)("h3",{id:"dictionaries-object"},"Dictionaries object"),(0,i.kt)("h3",{id:"validating-id-pattern-matching"},"Validating ID pattern matching"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"idMatch")," property allows you to specify a regular expression which will validate the ",(0,i.kt)("inlineCode",{parentName:"p"},"_id")," value of an object to determine if there is a match of the regular expression. If the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"_id")," property does not match the regular expression an error will be thrown when saving."),(0,i.kt)("h3",{id:"validating-id-foreign-key"},"Validating ID foreign key"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"idForeignKey")," property allows you to specify a foreign key definition for the ",(0,i.kt)("inlineCode",{parentName:"p"},"_id")," property. See the ",(0,i.kt)("a",{parentName:"p",href:"./Scalar%20Schema%20Types/schema_type_string#validating-foreign-keys"},"validating foreign keys")," section of the string schema type documentation for more details."),(0,i.kt)("h3",{id:"encryption"},"Encryption"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"./schema_encryption"},"encryption")," for more information."))}u.isMDXComponent=!0}}]);