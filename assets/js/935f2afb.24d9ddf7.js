"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"2.0.0-alpha.6","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is MVOM?","href":"/mvom/docs/Introduction/what_is_mvom","docId":"Introduction/what_is_mvom"},{"type":"link","label":"Installation","href":"/mvom/docs/Introduction/installation","docId":"Introduction/installation"},{"type":"link","label":"Setup and Configuration","href":"/mvom/docs/Introduction/setup_and_configuration","docId":"Introduction/setup_and_configuration"}]},{"type":"category","label":"Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connection","href":"/mvom/docs/Usage/connection","docId":"Usage/connection"},{"type":"category","label":"Schema","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basics","href":"/mvom/docs/Usage/Schema/schema_basics","docId":"Usage/Schema/schema_basics"},{"type":"category","label":"Scalar Schema Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"String","href":"/mvom/docs/Usage/Schema/Scalar Schema Types/schema_type_string","docId":"Usage/Schema/Scalar Schema Types/schema_type_string"},{"type":"link","label":"Boolean","href":"/mvom/docs/Usage/Schema/Scalar Schema Types/schema_type_boolean","docId":"Usage/Schema/Scalar Schema Types/schema_type_boolean"},{"type":"link","label":"Number","href":"/mvom/docs/Usage/Schema/Scalar Schema Types/schema_type_number","docId":"Usage/Schema/Scalar Schema Types/schema_type_number"}]}]},{"type":"link","label":"Model","href":"/mvom/docs/Usage/model","docId":"Usage/model"}]}]},"docs":{"Introduction/installation":{"id":"Introduction/installation","title":"Installation","description":"MVOM is available as an npm package. Install using your favorite package manager:","sidebar":"docsSidebar"},"Introduction/setup_and_configuration":{"id":"Introduction/setup_and_configuration","title":"Setup and Configuration","description":"","sidebar":"docsSidebar"},"Introduction/what_is_mvom":{"id":"Introduction/what_is_mvom","title":"What is MVOM?","description":"MVOM (MultiValue Object Mapper) is a library which provides the ability to access Multivalue databases (e.g. Unidata, Universe) using applications written for Node.js.","sidebar":"docsSidebar"},"Usage/connection":{"id":"Usage/connection","title":"Connection","description":"The first step to working with MVOM is to establish a connection to the database server via MVIS. Establishing a connection is facilitated via the Connection class which is exported from MVOM as a named export.","sidebar":"docsSidebar"},"Usage/model":{"id":"Usage/model","title":"Model","description":"","sidebar":"docsSidebar"},"Usage/Schema/Scalar Schema Types/schema_type_boolean":{"id":"Usage/Schema/Scalar Schema Types/schema_type_boolean","title":"Boolean","description":"The Boolean schema type allows you to work with boolean values.","sidebar":"docsSidebar"},"Usage/Schema/Scalar Schema Types/schema_type_number":{"id":"Usage/Schema/Scalar Schema Types/schema_type_number","title":"Number","description":"The string schema type allows you to work with numeric values.","sidebar":"docsSidebar"},"Usage/Schema/Scalar Schema Types/schema_type_string":{"id":"Usage/Schema/Scalar Schema Types/schema_type_string","title":"String","description":"The string schema type is the simplest of the schema types supported by MVOM.","sidebar":"docsSidebar"},"Usage/Schema/schema_basics":{"id":"Usage/Schema/schema_basics","title":"Basics","description":"The Schema class allows you to define your data definition for your MultiValue files. This definition is used to transform MultiValue data between the database and a JavaScript object. Additionally, it allows you to define data validation requirements to aid in ensuring data validity upon writing to the database.","sidebar":"docsSidebar"}}}')}}]);